name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.platform.name }})
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Windows
            os: windows-latest
            rust-target: x86_64-pc-windows-msvc
            tauri-args: ''

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libssl-dev \
            patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.rust-target }}

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          key: ${{ matrix.platform.os }}-${{ matrix.platform.rust-target }}-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun
            node_modules
          key: ${{ matrix.platform.os }}-bun-${{ hashFiles('bun.lockb', 'package.json') }}
          restore-keys: |
            ${{ matrix.platform.os }}-bun-

      - name: Install frontend dependencies
        run: bun install --frozen-lockfile

      - name: Build frontend
        run: bun run build

      - name: Build Tauri application
        run: bun run tauri build ${{ matrix.platform.tauri-args }}
        env:
          TAURI_SIGNING_PRIVATE_KEY: ""
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ""

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform.name }}
          path: |
            src-tauri/target/*/release/bundle/**/*
            src-tauri/target/release/bundle/**/*
          retention-days: 3

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ matrix.platform.name }}
          path: |
            src-tauri/target/*/release/build/*/output
            src-tauri/target/release/build/*/output
          retention-days: 3

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: build-*
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          name: Claude Workbench ${{ github.ref_name }}
          body: |
            ## Claude Workbench ${{ github.ref_name }}

            ### Downloads
            Choose the appropriate installer for your platform:

            - **macOS (Apple Silicon)**: `*-aarch64.dmg` or `*-aarch64.app.tar.gz`
            - **macOS (Intel)**: `*-x64.dmg` or `*-x64.app.tar.gz`
            - **Windows**: `*-setup.exe` or `*.msi`
            - **Linux**: `*.AppImage` or `*.deb`

            ### What's Changed
            See the full changelog at https://github.com/${{ github.repository }}/commits/${{ github.ref_name }}
          files: |
            artifacts/**/*.dmg
            artifacts/**/*.app.tar.gz
            artifacts/**/*.msi
            artifacts/**/*-setup.exe
            artifacts/**/*.AppImage
            artifacts/**/*.deb
            artifacts/**/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
